#!/usr/bin/env bash

# Checks for local dependencies needed for the project.

# shellcheck source=scripts/common
. "$(dirname "${0}")/common" || { echo ERROR; exit 1; }

# shellcheck disable=SC2016
declare -A DEPS=( \
    [jq]="going to https://stedolan.github.io/jq/download/" \
    [pipenv]='`pip install pipenv`' \
    [protoc]="going to https://github.com/protocolbuffers/protobuf/releases" \
    [npm]="installing nvm: https://github.com/nvm-sh/nvm#installation-and-update" \
    [curl]='`apt install curl` or `brew install curl`?' \
    [tar]='`apt install tar` or `brew install tar`?' \
    [realpath]='`apt install coreutils` or `brew install coreutils`?' \
    [dirname]='`apt install coreutils` or `brew install coreutils`?' \
    [basename]='`apt install coreutils` or `brew install coreutils`?' \
    [nproc]='`apt install nproc` or `brew install nproc`?' \
    [git]='`apt install git` or `brew install git`?' \
    [grep]='`apt install grep` or `brew install grep`?' \
    [pgrep]='`apt install procps` or `brew install procps`?' \
    [md5sum]='`apt install coreutils` or `brew install coreutils`?' \
    [yarn]='`npm i -g yarn`?' \
)

# Check for dependencies:
check_local_deps() {
    for dep in "${!DEPS[@]}"; do
        check_local_dep "${dep}" "${DEPS["${dep}"]}"
    done
}

check_local_deps && print "All local dependencies are present."" $PURPLE"

# On success, mark that all the dependencies are present. We don't expect local
# dependencies to change, so we're okay with letting `with` know that it
# doesn't need to rerun this script.
mark
