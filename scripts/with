#!/usr/bin/env bash

# Runs a set of commands after resolving their dependencies.

. "$(dirname "${0}")/common" || { echo ERROR; exit 1; }

deps=()
command=""

# Parse the args:
i=1
for arg in "${@}"; do
    ((i++))

    [[ "${arg}" == -- ]] && {
        command=("${@:$i}")
        break;
    }

    deps+=("${arg}")
done

# Resolve the dependencies:
resolve_deps "${deps[@]}"

dprint "deps: ${deps[@]}, commands: ${command[@]}"

# Finally, run the commands!
for cmd in "${command[@]}"; do
    script_file="$(script_file "${cmd}")"

    [ -f "${script_file}" ] && {
        dprint "Running ${cmd} as a script (${script_file}).."

        # If a matching script file exists, run it:
        ("${script_file}") || err "Script \`${cmd}\` failed with $?." $?
    } || {
        dprint "Running ${cmd} as a command.."

        # Otherwise, run the command:
        $cmd || err "`${cmd}` failed with $?." $?
    }
done


# function args {
#     echo "got ${@}"

#     while [[ "${1}" != -- ]]; do
#         uno+=("${1}")
#         shift 1 || return $?
#     done

#     shift 1 || return $?

#     while [[ "${1}" != -- ]]; do
#         dos+=("${1}")
#         shift 1 || return $?
#     done

#     shift 1 || return $?

#     tres=("${@}")
#     echo "uno (${#uno[@]}): ${uno[@]}"
#     echo "dos (${#dos[@]}): ${dos[@]}"
#     echo "tres (${#tres[@]}): ${tres[@]}"
# }
